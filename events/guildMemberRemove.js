const db = require("quick.db");

module.exports = async (client, member) => {

  const guildData = await client.database.fetchGuild(member.guild.id);

  const prefix = guildData.prefix || client.settings.prefix;
  const memberCounter = await db.fetch(`guilds.${member.guild.id}.memberCounter`);
  const inviteManager = await db.fetch(`guilds.${member.guild.id}.inviteManager`);

  try {

    //SayaÃ§
    if (memberCounter) {

      client.logger.log(`SAYAÃ‡ TETÄ°KLENDÄ°! â€¢ ${member.guild.name} (${member.guild.id})`);

      if (!member.guild.channels.cache.has(memberCounter.channel)) {

        client.logger.log(`SayaÃ§ kanalÄ± bulunamadÄ±, sunucudaki sayaÃ§ sÄ±fÄ±rlanÄ±yor... â€¢ ${member.guild.name} (${member.guild.id})`);
        db.delete(`guilds.${member.guild.id}.memberCounter`);

        member.guild.channels.cache.get(memberCounter.setupInChannel)?.send({
          embeds: [
            {
              color: client.settings.embedColors.red,
              title: '**Â»** SayaÃ§ KanalÄ± BulunamadÄ±ÄŸÄ± Ä°Ã§in SayaÃ§ SÄ±fÄ±rlandÄ±!',
              description: `**â€¢** Tekrar ayarlamak iÃ§in \`${prefix}sayaÃ§\` komutunu kullanabilirsiniz.`
            }
          ]
        });

      } else {

        const botPermissions = ["ViewChannel", "SendMessages", "EmbedLinks"];
        const permissions = require("../utils/Permissions.json");

        let clientPerms = [];

        botPermissions.forEach((perm) => {
          if (!member.guild.channels.cache.get(memberCounter.channel).permissionsFor(member.guild.members.me)?.has(perm)) {
            clientPerms.push(permissions[perm]);
          }
        });

        if (clientPerms.length > 0) {

          client.logger.log(`SayaÃ§ kanalÄ±nda bir/birkaÃ§ yetkim bulunmadÄ±ÄŸÄ± iÃ§in sayaÃ§ sistemi sÄ±fÄ±rlanÄ±yor... â€¢ ${member.guild.name} (${member.guild.id})`);
          db.delete(`guilds.${member.guild.id}.memberCounter`);

          return member.guild.channels.cache.get(memberCounter.setupInChannel).send({
            embeds: [{
              color: client.settings.embedColors.red,
              author: {
                name: `SayaÃ§ Sistemini Ã‡alÄ±ÅŸtÄ±rabilmem Ä°Ã§in Gereken Ä°zinlere Sahip DeÄŸilim!`,
                icon_url: member.guild.iconURL(),
              },
              description: `**Â»** ${member.guild.channels.cache.get(memberCounter.channel)} kanalÄ±nda yeterli yetkiye sahip olmadÄ±ÄŸÄ±m iÃ§in sayaÃ§ sistemini sÄ±fÄ±rladÄ±m.`,
              fields: [
                {
                  name: '**Â»** Ä°htiyacÄ±m Olan Ä°zinler;',
                  value: "**â€¢** " + clientPerms.map((p) => `${p}`).join("\n**â€¢** "),
                },
              ]
            }]
          });

        } else {

          //client.logger.log(`SayaÃ§ kanalÄ± sorunsuzca bulundu ve izinler kontrol edildi, sayaÃ§ mesajÄ± gÃ¶nderiliyor... â€¢ ${member.guild.name} (${member.guild.id})`);

          let joinEmbed = {
            color: client.settings.embedColors.red,
            author: {
              name: `${member.user.tag} AyrÄ±ldÄ±!`,
              icon_url: member.user.displayAvatarURL({ size: 1024 }),
            },
            description: `ğŸ“¤ **${memberCounter.target}** Ã¼ye olmamÄ±za **${memberCounter.target - member.guild.memberCount}** Ã¼ye kaldÄ±.`,
          };

          if (member.user.bot) joinEmbed.author.name = `${member.user.tag} AyrÄ±ldÄ±! (Bot ğŸ¤–)`;

          member.guild.channels.cache.get(memberCounter.channel).send({
            embeds: [joinEmbed]
          });

        }
      }
    }

    //Davet Sistemi
    if (inviteManager && inviteManager.invites) {

      for (let user of Object.keys(inviteManager.invites)) {
        if (inviteManager.invites[user].includes(member.id)) {
          let invites = inviteManager.invites[user];
          invites.splice(inviteManager.invites[user].indexOf(member.id), 1);
          db.set(`guilds.${member.guild.id}.inviteManager.invites.${user}`, invites);
          break;
        }
      }

    }

  } catch (err) { client.logger.error(err); };
};
